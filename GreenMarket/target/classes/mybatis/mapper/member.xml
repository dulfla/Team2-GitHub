<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mybatis.mapper.member">	

	<sql id="selectAllMember">
		select * from member
	</sql>
	
	<select id="selectAll" resultType="member">
		<include refid="selectAllMember"/>
		order by email ASC
	</select>
	
	<select id="selectByEmail" resultType="member" parameterType="String">
		<include refid="selectAllMember"/>
		WHERE email=#{email}
	</select>
	
	<select id="getNickName" resultType="int" parameterType="String">
		select count(*) from
		member
		where nickname =#{nickname}
	</select>
	
	<select id="getEmail" resultType="int" parameterType="String">
		select count(*) from
		member
		where email =#{email}
	</select>
	
	<insert id="insertMember" parameterType="member">
		INSERT INTO member (email, password,birth, address, phone,name,nickname)
		VALUES(#{email},#{password},#{birth},
			   #{address},#{phone},#{name},#{nickname})
	</insert>
	
	<update id="updateMember" parameterType="member">
		UPDATE member 
		SET name =#{name},birth=#{birth},address=#{address},
			phone=#{phone},nickname=#{nickname}
		WHERE email=#{email}
	</update>
	
	<update id="updateEmail" parameterType="member">
		UPDATE member 
		SET email=#{email}
		WHERE name=#{name}
	</update>
	
	<update id="updatePassword" parameterType="member">
		UPDATE member 
		SET password=#{password}
		WHERE email=#{email}
	</update>
	
	<select id="category" resultType="CategoryVO">
		select category from category
	</select>
	
	<insert id="productReg" parameterType="ProductVO">
		<selectKey keyProperty="productId" resultType="String" order="BEFORE">
    		SELECT 'pid'||pid_seq.nextval from dual
    	</selectKey>
		insert into productdetail (p_id,p_name,description,category,regdate,price)
    	values (#{productId},#{p_name},#{description},#{category},sysdate,#{price})
	</insert>
 		
	<insert id="product" parameterType="Product1VO">
		insert into product(idx,email,p_id)
		values (product_seq.nextval,#{email},#{productId})	
	</insert>
	
	<insert id="productPic" parameterType="ProductImageVO">
		insert into productPic(p_id, fileName, uploadPath, uuid)
		values (#{productId}, #{fileName}, #{uploadPath}, #{uuid})
	</insert>	

  	<select id="productDetail" resultType="ProductVO">
		select p_name, description, category, regdate, views, price, p_id,
		(select email from product where p_id=#{p_id}) as email,
		(select nickname from member where email=#{email}) as nickname
		from productDetail where p_id = #{p_id}
	</select>

<!-- 	 
	<select id="productDetail" resultType="ProductVO">
		select p_name, description, category, regdate, views, price, p_id,
		(select nickname from member where email=#{email}) as nickname
		from productDetail where p_id = #{p_id}
	</select>
 -->
	<select id="productImage" resultType="ProductImageVO">
		select * from ProductPic where p_id = #{p_id}
	</select>
		
	<update id="productModify" parameterType="ProductVO">
		 update productDetail set
		 p_name=#{p_name}, description=#{description}, category=#{category}, price=#{price}, trade=#{trade}
     	 where p_id = #{p_id}
	</update>		
	<insert id="modifyPic" parameterType="ProductImageVO">
		insert into productPic(p_id, fileName, uploadPath, uuid)
		values (#{p_id},#{fileName},#{uploadPath},#{uuid})
	</insert>
	
	 
	 <!-- 상품 삭제할때 상품상세정보를 마지막에 지워야함 -->
	 <!-- 상품 삭제 -->
	 <delete id="productDelete1">
		delete product where p_id=#{p_id}
	</delete>
	<!-- 상품상세보기 삭제 -->
	<delete id="productDelete">
		delete productDetail where p_id=#{p_id}
	</delete> 
	<!-- 이미지 삭제 -->
	<delete id="deleteImage">	
		delete from productPic where p_id=#{p_id}
	</delete>
	
	<select id="getImageInfo" resultType="ProductImageVO">
		select * from productPic where p_id=#{p_id}
	</select>
</mapper>