<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mybatis.mapper.admin">

	<!-- memberAdmin -->

	<!-- 회원 기록이 있는 년도 -->
	<select id="selectMemberAdminYears" resultType="String">
		SELECT TO_CHAR(trakingDate,'YYYY') as "year"
		FROM memberHistory
		GROUP BY TO_CHAR(trakingDate,'YYYY')
		ORDER BY "year" ASC
	</select>

	<!-- 년도별 누적 회원수 -->
	<select id="countAllMemberYear" resultType="cYearVo">
		SELECT
			dates AS "year",
			COUNT(CASE WHEN m2.type='IN   ' THEN 1 END)-COUNT(CASE WHEN m2.type='OUT  ' THEN 1 END) AS "cnt"
		FROM
		    (SELECT TO_CHAR(trakingDate,'YYYY') AS dates FROM memberHistory GROUP BY TO_CHAR(trakingDate,'YYYY')) m1,
		    memberHistory m2
		<![CDATA[WHERE TO_DATE(TO_CHAR(m2.trakingDate,'YYYY'), 'YYYY')<=TO_DATE(dates, 'YYYY')]]>
		GROUP BY dates
		ORDER BY dates ASC
	</select>

	<!-- 년도별 가입/탈퇴 건수 -->
	<select id="countMemberYear" parameterType="String" resultType="cYearVo">
		SELECT
		    TO_CHAR(trakingDate,'YYYY') as "year",
		    COUNT(*) AS "cnt"
		FROM memberHistory
		WHERE type=#{type}
		GROUP BY TO_CHAR(trakingDate,'YYYY')
		ORDER BY "year" ASC
		
	</select> <!-- type::'IN   ','OUT  ' -->

	<!-- 월별 가입/탈퇴 건수 -->
	<select id="countMemberMonth" parameterType="String" resultType="cMonthVo">
		SELECT
		    TO_CHAR(trakingDate,'YYYY') as "year",
		    TO_CHAR(trakingDate,'MM') as "month",
		    COUNT(*) AS "cnt"
		FROM memberHistory
		WHERE type=#{type}
		GROUP BY TO_CHAR(trakingDate,'YYYY'),TO_CHAR(trakingDate,'MM') 
		ORDER BY "year" ASC, "month" ASC
	</select> <!-- type::'IN   ','OUT  ' -->


	<!-- productAdmin -->

	<!-- 전체 상품 등록/삭제/거래 건수 -->
	<select id="countAllTypeProduct" parameterType="String" resultType="long">
		SELECT COUNT(*)
		FROM productHistory
		WHERE type=#{type}
	</select> <!-- type::'IN','OUT','TRADE' -->

	<!-- 미거래 상품 삭제 건수 -->
	<select id="countBfTradeRemovedProduct" resultType="long">
		SELECT COUNT(*)
		FROM productHistory
		WHERE type='OUT' AND
			p_id NOT IN (SELECT p_id FROM productHistory WHERE type='TRADE')
	</select>
 	
 	<!-- 카테고리 가져오기 -->
 	<select id="selectAllCategory" resultType="String">
 		SELECT category
 		FROM category
 		ORDER BY category ASC
 	</select>
 	
 	<!-- 카테고리별 등록/삭제/거래된 상품 수 -->
	<select id="countAllTypeProductByCategory" parameterType="String" resultType="cCategoryVo">
		SELECT
			c.category,
			COUNT(p_id) AS "cnt"
		FROM
			category c LEFT OUTER JOIN
			(SELECT category, p_id FROM productHistory WHERE type=#{type}) p
		ON c.category = p.category
		GROUP BY c.category
	</select> <!-- type::'IN','OUT','TRADE' -->

	<!-- 카테고리별 미 거래 삭제 상품 수 -->
	<select id="countBfTradeRemovedProductByCategory" resultType="cCategoryVo">
		SELECT
			c.category,
			COUNT(p_id) AS "cnt"
		FROM category c LEFT OUTER JOIN
			<![CDATA[(SELECT category, p_id FROM productHistory WHERE type='OUT' AND type<>'TRADE') p]]>
		ON c.category = p.category
		GROUP BY c.category
		ORDER BY category ASC
	</select>

	<!-- 카테고리별 거래 후 삭제 상품 수 -->
	<select id="countAfTradeRemovedProductByCategory" resultType="cCategoryVo">
		SELECT
			c.category,
			COUNT(p_id) AS "cnt"
		FROM category c LEFT OUTER JOIN
			(SELECT category, p_id FROM productHistory WHERE type='OUT' AND type='TRADE') p
		ON c.category = p.category
		GROUP BY c.category
		ORDER BY category ASC
	</select>
	
	
	<!-- category admin -->
	
	<!-- 카테고리 가져오기 -->
	<select id="selectAllCategorys" resultType="cCategory">
		SELECT c.category, c.icon , NVL("count",0) AS "cnt"
		FROM category c LEFT OUTER JOIN (SELECT category, COUNT(*) AS "count" FROM productDetail GROUP BY category) pd
        ON c.category=pd.category
		ORDER BY category ASC
	</select>
	
	<!-- 카테고리 등록하기 -->
	<insert id="insertNewCategory" parameterType="cCategory">
		INSERT INTO category
		VALUES(#{category}, #{icon})
	</insert>
	
	<!-- 카테고리 이미지 수정하기 -->
	<update id="updateCategoryIcon" parameterType="cCategory">
		UPDATE category
		SET	icon=#{icon}
		WHERE category=#{category}
	</update>
	
	<!-- 카테고리 수정하기 -->
	<update id="updateCategory" parameterType="map">
		UPDATE category
		SET	category=#{data}, icon=#{icon}
		WHERE category=#{category}
	</update>
	
	<!-- 카테고리 삭제하기 -->
	<delete id="deleteCategory" parameterType="String">
		DELETE category
		WHERE category=#{oldCategory}
	</delete>
	
	<!-- 상품 상세정보에 있는 카테고리들 업데이트 -->
		<update id="updateCategoryInProduct" parameterType="map">
		UPDATE productDetail
		SET	category=#{move}
		WHERE category=#{category}
	</update>

	<!-- 카테고리 확인 -->
	<select id="checkNewCategoryTitle" parameterType="String" resultType="int">
		SELECT COUNT(category)
		FROM category
		WHERE category=#{c}
	</select>

	<!-- 기존 파일명 가져오기 -->
	<select id="selectCategoryFileName" parameterType="String" resultType="String">
		SELECT icon
		FROM category
		WHERE category=#{c}
	</select>

</mapper>